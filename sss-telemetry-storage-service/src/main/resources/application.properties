quarkus.http.port=${SERVER_PORT:2004}

quarkus.application.name=sss-telemetry-storage-service
quarkus.container-image.group=quangdung
quarkus.container-image.name=sss-telemetry-storage-service
quarkus.container-image.tag=@project.version@




# Service Auth and ACL URL to get device info by Client ID
device-info-api/mp-rest/url=${DEVICE_INFO_API_URL:http://localhost:2001}

# The host and port of Redis server
quarkus.redis.hosts=${REDIS_URL:redis://localhost:6379}

# Set the default cache implementation to Redis
quarkus.cache.type=redis

# Configure our specific cache for device information
quarkus.cache.redis.device-info-cache.expire-after-write=${CACHE_EXPIRE_TIME:60m}
quarkus.cache.redis.device-info-cache.key-type=java.lang.String
quarkus.cache.redis.device-info-cache.value-type=org.quangdung.infrastructure.entity.auth_acl_service.DeviceInfoResponse


# Enable metrics
quarkus.micrometer.enabled=true

# Enable Prometheus endpoint 
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics

# Enable JVM metrics
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true
quarkus.micrometer.binder.http-server=true


# InfluxDB Client Config
influxClient.url=${INFLUXDB_URL:http://localhost:8086}
influxClient.token=${INFLUXDB_TOKEN:my-super-secret-token}
influxClient.org=${INFLUXDB_ORG:sss-quangdung}
influxClient.bucketName=${INFLUXDB_BUCKET:telemetry-data}


quarkus.smallrye-reactive-messaging-rabbitmq.devservices.enabled=false
mp.messaging.connector.rabbitmq.host=${RABBITMQ_HOST:localhost}
mp.messaging.connector.rabbitmq.port=${RABBITMQ_PORT:5672}
mp.messaging.connector.rabbitmq.username=${RABBITMQ_USER:guest}
mp.messaging.connector.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# Channel 1: Device data channel
mp.messaging.incoming.device-data-in-from-rabbitmq.connector=smallrye-rabbitmq
mp.messaging.incoming.device-data-in-from-rabbitmq.queue.name=${DEVICE_DATA_QUEUE_NAME:sensor-data-queue}
mp.messaging.incoming.device-data-in-from-rabbitmq.durable=true
mp.messaging.incoming.device-data-in-from-rabbitmq.auto-delete=false
mp.messaging.incoming.device-data-in-from-rabbitmq.exclusive=false
mp.messaging.incoming.device-data-in-from-rabbitmq.exchange.name=${DEVICE_DATA_EXCHANGE_NAME:device-data-exchange}
mp.messaging.incoming.device-data-in-from-rabbitmq.exchange.durable=true
mp.messaging.incoming.device-data-in-from-rabbitmq.binding.routing-key=${DEVICE_DATA_ROUTING_KEY:device.data.raw}
mp.messaging.incoming.device-data-in-from-rabbitmq.acknowledgement=post-acknowledge

# Channel 2: Power outage alert channel (incoming)
mp.messaging.incoming.power-outage-alert-from-rabbitmq.connector=smallrye-rabbitmq
mp.messaging.incoming.power-outage-alert-from-rabbitmq.queue.name=${POWER_OUTAGE_QUEUE_NAME:power-outage-alert-queue}
mp.messaging.incoming.power-outage-alert-from-rabbitmq.durable=false
mp.messaging.incoming.power-outage-alert-from-rabbitmq.auto-delete=true
mp.messaging.incoming.power-outage-alert-from-rabbitmq.exclusive=false
mp.messaging.incoming.power-outage-alert-from-rabbitmq.exchange.name=${POWER_OUTAGE_EXCHANGE_NAME:power-outage-alert-exchange}
mp.messaging.incoming.power-outage-alert-from-rabbitmq.exchange.durable=false
mp.messaging.incoming.power-outage-alert-from-rabbitmq.binding.routing-key=${POWER_OUTAGE_ROUTING_KEY:power.outage.alert}
mp.messaging.incoming.power-outage-alert-from-rabbitmq.acknowledgement=post-acknowledge
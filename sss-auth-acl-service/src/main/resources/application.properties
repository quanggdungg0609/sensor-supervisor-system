quarkus.http.port=${SERVICE_PORT:2001}

quarkus.application.name=auth-and-acl-service
quarkus.container-image.group=quangdung
quarkus.container-image.name=sss-auth-and-acl-service
quarkus.container-image.tag=@project.version@

# REST Client Configuration
quarkus.rest-client.device-service-api.url=${DEVICE_SERVICE_API_URL}
quarkus.smallrye-reactive-messaging-rabbitmq.devservices.enabled=false

# Reactive PostgreSQL Config (for Hibernate Reactive + Panache)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:quarkus}
quarkus.datasource.password=${DB_PASSWORD:quarkus123}
quarkus.datasource.reactive.url=postgresql://${DB_ADDRESS:localhost:5432}/auth_acl_db
quarkus.hibernate-orm.database.generation=update

# Security Configuration
app.security.bcrypt.salt-rounds=${BCRYPT_SALT_ROUNDS:12}
app.security.bcrypt.custom-salt=${BCRYPT_CUSTOM_SALT:$2a$12$abcdefghijklmnopqrstuv}
app.security.secret-key=${APP_SECRET_KEY:default-secret-key}

# MQTT Admin account 
mqtt.admin.username=${MQTT_ADMIN_USERNAME:admin}
mqtt.admin.password=${MQTT_ADMIN_PASSWORD:admin123}
mqtt.admin.clientid=${MQTT_ADMIN_CLIENTID:ADMINCLIENT}

# Enable metrics
quarkus.micrometer.enabled=true

# Enable Prometheus endpoint 
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/metrics

# Enable JVM metrics
quarkus.micrometer.binder.jvm=true
quarkus.micrometer.binder.system=true
quarkus.micrometer.binder.http-server=true
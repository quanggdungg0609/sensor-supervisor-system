version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "5050:8080"
      - "1883:1883"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: traefik_config
        target: /etc/traefik/traefik.yml
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:mypassword"
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-cac"

  mqtt-broker:
    image: emqx/emqx:5.3.0
    configs:
      - source: emqx_config
        target: /opt/emqx/etc/emqx.conf
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_log:/opt/emqx/log
    restart: unless-stopped
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.emqx-mqtt.entrypoints=mqtt"
      - "traefik.tcp.routers.emqx-mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.emqx-mqtt.service=emqx-mqtt-svc"
      - "traefik.tcp.services.emqx-mqtt-svc.loadbalancer.server.port=1883"
    healthcheck:
      test: ["CMD", "emqx_ctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  prometheus:
    image: prom/prometheus:latest
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    networks:
      - app-network
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  influxdb:
    image: influxdb:2.7-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: sss-quangdung
      DOCKER_INFLUXDB_INIT_BUCKET: telemetry-data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  auth-acl-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: auth_acl_db
      POSTGRES_USER: quarkus
      POSTGRES_PASSWORD: quarkus123
    volumes:
      - postgres_data_auth_acl_service:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - auth-acl-private-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  sss-auth-acl-service:
    image: 192.168.152.117:5000/quangdung/sss-auth-and-acl-service:latest
    environment:
      SERVICE_PORT: 2001
      DB_ADDRESS: auth-acl-db:5432
      DB_USERNAME: quarkus
      DB_PASSWORD: quarkus123
      DEVICE_SERVICE_API_URL: http://sss-device-service:2002/
      MQTT_BROKER_URL: mqtt://mqtt-broker:1883
      MQTT_ADMIN_USERNAME: admin
      MQTT_ADMIN_PASSWORD: admin123
      MQTT_ADMIN_CLIENTID: ADMINCLIENT
      BCRYPT_SALT_ROUNDS: 12
      BCRYPT_CUSTOM_SALT: $2a$12$abcdefghijklmnopqrstuv
      APP_SECRET_KEY: your-secret-key-here-change-in-production
    restart: unless-stopped
    networks:
      - app-network
      - auth-acl-private-network
    depends_on:
      - mqtt-broker
      - redis
      - auth-acl-db
      - sss-device-service
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      placement:
        constraints:
          - "node.hostname == u24serv-cac"

  device-service-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: device_db
      POSTGRES_USER: quarkus
      POSTGRES_PASSWORD: quarkus123
    volumes:
      - device-service-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - device-service-private-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      placement:
        constraints:
          - "node.hostname == u24serv-db"

  sss-device-service:
    image: 192.168.152.117:5000/quangdung/sss-device-service:latest
    environment:
      DB_ADDRESS: device-service-db:5432
      DB_USERNAME: quarkus
      DB_PASSWORD: quarkus123
      DB_GENERATION: update
      MQTT_AUTH_ACL_URL: http://sss-auth-acl-service:2001
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    networks:
      - app-network
      - device-service-private-network
    depends_on:
      - rabbitmq
      - device-service-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.device-api.rule=PathPrefix(`/devices-service`)"
      - "traefik.http.routers.device-api.entrypoints=http"
      - "traefik.http.services.device-api-svc.loadbalancer.server.port=2002"
      - "traefik.http.routers.device-api.middlewares=strip-device-prefix"
      - "traefik.http.middlewares.strip-device-prefix.stripprefix.prefixes=/devices-service"
    deploy:
      placement:
        constraints:
          - "node.hostname == u24serv-cac"

  sss-data-ingestor-serivce:
    image: 192.168.152.117:5000/quangdung/sss-data-ingestor-service:latest
    environment:
      MQTT_HOST: mqtt-broker
      MQTT_PORT: 1883
      MQTT_USER: admin
      MQTT_PASSWORD: admin123
      MQTT_CLIENT_ID: ADMINCLIENT
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - mqtt-broker
      - sss-auth-acl-service
    networks:
      - app-network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      placement:
        constraints:
          - "node.hostname == u24serv-cac"

  sss-telemetry-storage-service:
    image: 192.168.152.117:5000/quangdung/sss-telemetry-storage-service:latest
    networks:
      - app-network
    depends_on:
      - rabbitmq
      - influxdb
      - sss-data-ingestor-serivce
    restart: unless-stopped
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      REDIS_URL: redis://redis:6379
      DEVICE_INFO_API_URL: http://sss-auth-acl-service:2001/
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: my-super-secret-token
      INFLUXDB_ORG: sss-quangdung
      INFLUXDB_BUCKET: telemetry-data
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      placement:
        constraints:
          - "node.hostname == u24serv-cac"

volumes:
  emqx_data:
    driver: local
    labels:
      - "created-by=swarm-stack"
  emqx_log:
    driver: local
    labels:
      - "created-by=swarm-stack"
  grafana_data:
    driver: local
    labels:
      - "created-by=swarm-stack"
  redis_data:
    driver: local
    labels:
      - "created-by=swarm-stack"
  rabbitmq_data:
    driver: local
    labels:
      - "created-by=swarm-stack"
  influxdb_data:
    driver: local
    labels:
      - "created-by=swarm-stack"
  postgres_data_auth_acl_service:
    driver: local
    labels:
      - "created-by=swarm-stack"
  device-service-db-data:
    driver: local
    labels:
      - "created-by=swarm-stack"

networks:
  app-network:
    driver: overlay
    attachable: true
    labels:
      - "created-by=swarm-stack"
  auth-acl-private-network:
    driver: overlay
    attachable: true
    labels:
      - "created-by=swarm-stack"
  device-service-private-network:
    driver: overlay
    attachable: true
    labels:
      - "created-by=swarm-stack"

configs:
  traefik_config:
    external: true
  prometheus_config:
    external: true
  emqx_config:
    external: true
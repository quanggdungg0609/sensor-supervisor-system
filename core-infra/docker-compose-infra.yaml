

services:
  mqtt-broker:
    image: emqx/emqx:5.3.0
    container_name: shared-emqx-broker 
    ports:
      - "1883:1883"      # MQTT/TCP
      - "8883:8883"      # MQTT/SSL
      - "8083:8083"      # MQTT/WS
      - "8084:8084"      # MQTT/WSS
      - "18083:18083"    # Dashboard
    volumes:
      - ./emqx/etc/emqx.conf:/opt/emqx/etc/emqx.conf:ro
      - emqx_data:/opt/emqx/data
      - emqx_log:/opt/emqx/log
    restart: unless-stopped
    networks:
      - infrastructure-network 
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "emqx_ctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine 
    container_name: shared-redis
    ports:
      - "6379:6379" 
    volumes:
      - redis_data:/data 
    restart: unless-stopped
    networks:
      - infrastructure-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:3.12-management-alpine 
    container_name: shared-rabbitmq
    ports:
      - "5672:5672"      
      - "15672:15672"    
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq 
    restart: unless-stopped
    networks:
      - infrastructure-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s


  prometheus:
    image: prom/prometheus:latest
    container_name: shared-prometheus-server 
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - infrastructure-network
    
  grafana:
    image: grafana/grafana:latest
    container_name: shared-grafana-dashboard 
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - infrastructure-network
    depends_on:
      - prometheus 

   # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine 
    container_name: shared-telemetry-influxdb
    ports:
      - "8086:8086" 
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin 
      DOCKER_INFLUXDB_INIT_PASSWORD: password 
      DOCKER_INFLUXDB_INIT_ORG: sss-quangdung 
      DOCKER_INFLUXDB_INIT_BUCKET: telemetry-data 
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-token 
    volumes:
      - influxdb_data:/var/lib/influxdb2 
    restart: unless-stopped
    networks:
      - infrastructure-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s

volumes:
  emqx_data: {}
  emqx_log: {}
  grafana_data: {}
  redis_data: {}    
  rabbitmq_data: {}  
  influxdb_data: {}

networks:
  shared-network:
    driver: bridge
  infrastructure-network: 
    driver: bridge
  services-network: 
    driver: bridge